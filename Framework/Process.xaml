<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>867,4510</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="72">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="37">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="720,4445" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="UserfileExist" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="UserConfig" />
      <Variable x:TypeArguments="x:Boolean" Name="TemplateExist" />
      <Variable x:TypeArguments="x:Boolean" Name="ForecastExist" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtQuaterFormat" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_5Prev" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_5Curr" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_4Prev" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_4Curr" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="WB" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="MWB" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="TWb" />
      <Variable x:TypeArguments="x:String" Name="ArchivePath" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Addn" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Temp" />
      <Variable x:TypeArguments="x:String" Name="AddnScreenshotPath" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_FormatTable">
        <Variable.Default>
          <mva:VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="New DataTable" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="QuaterValueSel" />
      <Variable x:TypeArguments="x:Boolean" Name="ClearanceCheck">
        <Variable.Default>
          <Literal x:TypeArguments="x:Boolean" />
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="678,51" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[In_Config(&quot;OutlookProfile&quot;).ToString]" Body="[In_Config(&quot;logF_BusinessProcessName&quot;).ToString + &quot; : Run Started&quot;]" Cc="[In_Config(&quot;SuccessEmailCC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="SendOutlookMail_2" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[In_Config(&quot;logF_BusinessProcessName&quot;).ToString + &quot; : Run Started&quot;]" To="[In_Config(&quot;SuccessEmailTo&quot;).ToString]">
          <ui:SendOutlookMail.Files>
            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
          </ui:SendOutlookMail.Files>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:SendOutlookMail>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="376,332" sap2010:WorkflowViewState.IdRef="Sequence_19">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" FileName="C:\Program Files (x86)\Microsoft Office\root\Office16\OUTLOOK.EXE" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="StartProcess_1" />
              <Delay Duration="00:00:20" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
              <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[In_Config(&quot;OutlookProfile&quot;).ToString]" Body="[In_Config(&quot;logF_BusinessProcessName&quot;).ToString + &quot; : Run Started&quot;]" Cc="[In_Config(&quot;SuccessEmailCC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="SendOutlookMail_6" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[In_Config(&quot;logF_BusinessProcessName&quot;).ToString + &quot; : Run Started&quot;]" To="[In_Config(&quot;SuccessEmailTo&quot;).ToString]">
                <ui:SendOutlookMail.Files>
                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                </ui:SendOutlookMail.Files>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:SendOutlookMail>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message Process Start" sap:VirtualizedContainerService.HintSize="678,51" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Started Process&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BoxDrive workflow" sap:VirtualizedContainerService.HintSize="678,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Processing\BoxDrive.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="In_Config">[in_Config]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <Assign sap:VirtualizedContainerService.HintSize="678,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Object">[in_Config("Local")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Object">[in_Config("Local").ToString.Replace("&lt;username&gt;",Environment.UserName)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message Read User Config" sap:VirtualizedContainerService.HintSize="678,51" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Read Userconfig file inprogress&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <ui:PathExists DisplayName="Path Exists - userinput" Exists="[UserfileExist]" sap:VirtualizedContainerService.HintSize="678,51" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[path.Combine(In_Config(&quot;Local&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName).ToString,In_Config(&quot;UserinputFileName&quot;).ToString)]" PathType="File">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:PathExists>
    <If Condition="[UserfileExist]" DisplayName="If - Userinput File Exist" sap:VirtualizedContainerService.HintSize="678,51" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Read User Input" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ReadUserInput workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Processing\ReadUserInput.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">[path.Combine(In_Config("Local").ToString.Replace("&lt;username&gt;",Environment.UserName.ToString),In_Config("UserinputFileName").ToString)]</InArgument>
              <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Filepath"}]</InArgument>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[UserConfig]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dtQuaterFormat]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Quater" WorkbookPath="[path.Combine(In_Config(&quot;Local&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName.ToString),In_Config(&quot;UserinputFileName&quot;).ToString)]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ReadRange>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="User Config File Missing" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[In_Config(&quot;OutlookProfile&quot;).ToString]" Body="[&quot;Error occurred while accessing the file &quot; + Environment.NewLine +path.Combine(In_Config(&quot;Local&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName.ToString),In_Config(&quot;UserinputFileName&quot;).ToString)]" Cc="[In_Config(&quot;ExceptionEmailCC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[In_Config(&quot;logF_BusinessProcessName&quot;).ToString + &quot; : Exception&quot;]" To="[In_Config(&quot;ExceptionEmailTo&quot;).ToString]">
            <ui:SendOutlookMail.Files>
              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
            </ui:SendOutlookMail.Files>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:SendOutlookMail>
          <Throw Exception="[new BusinessRuleException(&quot;Unable to locate the file &quot; + path.Combine(In_Config(&quot;Local&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName.ToString),In_Config(&quot;UserinputFileName&quot;).ToString))]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message Read UserConfig" sap:VirtualizedContainerService.HintSize="678,51" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Read Userconfig file completed&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <Sequence DisplayName="Source File Download" sap:VirtualizedContainerService.HintSize="678,66" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="ForecastReportPath" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;File chech and move inprogress&quot;]" />
      <ui:PathExists DisplayName="Template File - Path Exists" Exists="[TemplateExist]" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[path.Combine(UserConfig(&quot;FilePath&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;TemplateName&quot;).ToString)]" PathType="File">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:PathExists>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[path.Combine(UserConfig(&quot;FilePath&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;TemplateName&quot;).ToString)]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
      <If Condition="[TemplateExist]" DisplayName="Tempale Path Exist If" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <ui:CopyFile ContinueOnError="{x:Null}" Destination="[path.Combine(in_Config(&quot;Local&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;TemplateName&quot;).ToString)]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="True" Path="[path.Combine(UserConfig(&quot;FilePath&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;TemplateName&quot;).ToString)]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:CopyFile>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Template File Missing" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[In_Config(&quot;OutlookProfile&quot;).ToString]" Body="[&quot;Error occurred while accessing the file &quot; + Environment.NewLine +path.Combine(UserConfig(&quot;FilePath&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;TemplateName&quot;).ToString)]" Cc="[In_Config(&quot;ExceptionEmailCC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,148" sap2010:WorkflowViewState.IdRef="SendOutlookMail_4" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[In_Config(&quot;logF_BusinessProcessName&quot;).ToString + &quot; : Exception&quot;]" To="[In_Config(&quot;ExceptionEmailTo&quot;).ToString]">
              <ui:SendOutlookMail.Files>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
              </ui:SendOutlookMail.Files>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:SendOutlookMail>
            <Throw Exception="[new BusinessRuleException(&quot;Unable to locate the file &quot; + path.Combine(UserConfig(&quot;FilePath&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;TemplateName&quot;).ToString))]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
          </Sequence>
        </If.Else>
      </If>
      <ui:PathExists DisplayName="Forecast File - Path Exists" Exists="[ForecastExist]" sap:VirtualizedContainerService.HintSize="334,89" sap2010:WorkflowViewState.IdRef="PathExists_3" Path="[path.Combine(UserConfig(&quot;FilePath&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;ForecastFileName&quot;).ToString)]" PathType="File">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:PathExists>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[path.Combine(UserConfig(&quot;FilePath&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;ForecastFileName&quot;).ToString)]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
      <If Condition="[ForecastExist]" DisplayName="Forecast File Exist If" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <ui:CopyFile ContinueOnError="{x:Null}" Destination="[path.Combine(in_Config(&quot;Local&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;ForecastFileName&quot;).ToString)]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[path.Combine(UserConfig(&quot;FilePath&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;ForecastFileName&quot;).ToString)]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:CopyFile>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Forecast File Missing" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[In_Config(&quot;OutlookProfile&quot;).ToString]" Body="[&quot;Error occurred while accessing the file &quot; + Environment.NewLine +path.Combine(In_Config(&quot;Local&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName.ToString),In_Config(&quot;ForecastFileName&quot;).ToString)]" Cc="[In_Config(&quot;ExceptionEmailCC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="SendOutlookMail_5" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[In_Config(&quot;logF_BusinessProcessName&quot;).ToString + &quot; : Exception&quot;]" To="[In_Config(&quot;ExceptionEmailTo&quot;).ToString]">
              <ui:SendOutlookMail.Files>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
              </ui:SendOutlookMail.Files>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:SendOutlookMail>
            <Throw Exception="[new BusinessRuleException(&quot;Unable to locate the file &quot; + path.Combine(UserConfig(&quot;FilePath&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;ForecastFileName&quot;).ToString))]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
          </Sequence>
        </If.Else>
      </If>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;File chech and move completed&quot;]" />
    </Sequence>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SAP_Run workflow" sap:VirtualizedContainerService.HintSize="678,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Processing\SAP_Run.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
        </InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_UserConfig">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="UserConfig" />
        </InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_5Prev">
          <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dt_5Prev" />
        </OutArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_5Curr">
          <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dt_5Curr" />
        </OutArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_4Prev">
          <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dt_4Prev" />
        </OutArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_4Curr">
          <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dt_4Curr" />
        </OutArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_Addn">
          <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dt_Addn" />
        </OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_AddnScreenshotPath">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="AddnScreenshotPath" />
        </OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_QtrValue">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="QuaterValueSel" />
        </OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <Sequence DisplayName="Excel Activities" sap:VirtualizedContainerService.HintSize="678,3089" sap2010:WorkflowViewState.IdRef="Sequence_17">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Forecast File Excel Application Scope" sap:VirtualizedContainerService.HintSize="636,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Workbook="[WB]" WorkbookPath="[path.Combine(in_Config(&quot;Local&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;ForecastFileName&quot;).ToString)]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,689" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelCopySheet DestinationFilePath="[path.Combine(in_Config(&quot;Local&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;TemplateName&quot;).ToString)]" DestinationSheetName="[UserConfig(&quot;AssetSheetName&quot;).ToString]" DisplayName="Copy Sheet - Prev Year Asset" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="ExcelCopySheet_1" SheetName="[UserConfig(&quot;AssetSheetName&quot;).ToString]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelCopySheet>
              <ui:ExcelCopySheet DestinationFilePath="[path.Combine(in_Config(&quot;Local&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;TemplateName&quot;).ToString)]" DestinationSheetName="[UserConfig(&quot;LiablitySheetName&quot;).ToString]" DisplayName="Copy Sheet - Prev Year Liablity" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="ExcelCopySheet_2" SheetName="[UserConfig(&quot;LiablitySheetName&quot;).ToString]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelCopySheet>
              <ui:ExcelCopySheet DestinationFilePath="[path.Combine(in_Config(&quot;Local&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;TemplateName&quot;).ToString)]" DestinationSheetName="[UserConfig(&quot;AssetSheetName1&quot;).ToString]" DisplayName="Copy Sheet - Curr Year Asset" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="ExcelCopySheet_3" SheetName="[UserConfig(&quot;AssetSheetName1&quot;).ToString]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelCopySheet>
              <ui:ExcelCopySheet DestinationFilePath="[path.Combine(in_Config(&quot;Local&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;TemplateName&quot;).ToString)]" DestinationSheetName="[UserConfig(&quot;LiablitySheetName1&quot;).ToString]" DisplayName="Copy Sheet - Curr Year Liablity" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="ExcelCopySheet_4" SheetName="[UserConfig(&quot;LiablitySheetName1&quot;).ToString]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelCopySheet>
              <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_1" />
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[WB]" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Template file Excel Application Scope" sap:VirtualizedContainerService.HintSize="636,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" Workbook="[TWb]" WorkbookPath="[path.Combine(in_Config(&quot;Local&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;TemplateName&quot;).ToString)]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_13">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Macro Run Excel Application Scope" sap:VirtualizedContainerService.HintSize="636,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" Workbook="[MWB]" WorkbookPath="[in_Config(&quot;MacroPath&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName)]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,606" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Execute Macro - Insert Pic 5 Prev" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ExecuteMacro_5" MacroName="FileUpdate" MacroParameters="[{UserConfig(&quot;TemplateSheetName&quot;).tostring,userconfig(&quot;TemplateName&quot;).ToString,AddnScreenshotPath,userconfig(&quot;Add_GLAccount_Pos&quot;).ToString}]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExecuteMacro>
              <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Execute Macro - Insert Pic 5 Prev" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ExecuteMacro_1" MacroName="FileUpdate" MacroParameters="[{UserConfig(&quot;TemplateSheetName&quot;).tostring,userconfig(&quot;TemplateName&quot;).ToString,path.Combine(in_Config(&quot;Local&quot;).ToString,in_Config(&quot;Report_500010_Name&quot;).ToString + &quot;_&quot; + UserConfig(&quot;PreviousYear&quot;).ToString + &quot;.jpg&quot;),userconfig(&quot;500010_Prev_ImagePosition&quot;).ToString}]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExecuteMacro>
              <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Execute Macro - Insert Pic 4 Prev" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ExecuteMacro_2" MacroName="FileUpdate" MacroParameters="[{UserConfig(&quot;TemplateSheetName&quot;).tostring,userconfig(&quot;TemplateName&quot;).ToString,path.Combine(in_Config(&quot;Local&quot;).ToString,in_Config(&quot;Report_400020_400040_Name&quot;).ToString + &quot;_&quot; + UserConfig(&quot;PreviousYear&quot;).ToString + &quot;.jpg&quot;),userconfig(&quot;400020_400040_Prev_ImagePosition&quot;).ToString}]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExecuteMacro>
              <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Execute Macro - Insert Pic 5 Curr" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ExecuteMacro_3" MacroName="FileUpdate" MacroParameters="[{UserConfig(&quot;TemplateSheetName&quot;).tostring,userconfig(&quot;TemplateName&quot;).ToString,path.Combine(in_Config(&quot;Local&quot;).ToString,in_Config(&quot;Report_500010_Name&quot;).ToString + &quot;_&quot; + UserConfig(&quot;CurrentYear&quot;).ToString + &quot;.jpg&quot;),userconfig(&quot;500010_Curr_ImagePosition&quot;).ToString}]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExecuteMacro>
              <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Execute Macro - Insert Pic 4 Curr" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ExecuteMacro_4" MacroName="FileUpdate" MacroParameters="[{UserConfig(&quot;TemplateSheetName&quot;).tostring,userconfig(&quot;TemplateName&quot;).ToString,path.Combine(in_Config(&quot;Local&quot;).ToString,in_Config(&quot;Report_400020_400040_Name&quot;).ToString + &quot;_&quot; + UserConfig(&quot;CurrentYear&quot;).ToString + &quot;.jpg&quot;),userconfig(&quot;400020_400040_Curr_ImagePosition&quot;).ToString}]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExecuteMacro>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_3" Workbook="[MWB]" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Template file Excel Application Scope" sap:VirtualizedContainerService.HintSize="636,2724" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000" Workbook="[TWb]" WorkbookPath="[path.Combine(in_Config(&quot;Local&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;TemplateName&quot;).ToString)]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="602,2615" sap2010:WorkflowViewState.IdRef="Sequence_14">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelWriteCell Cell="[UserConfig(&quot;LiabCell&quot;).ToString]" DisplayName="Write Cell - Prev year Liablity" sap:VirtualizedContainerService.HintSize="560,51" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" Text="[UserConfig(&quot;LiablitySheetName&quot;).ToString.Trim]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelWriteCell>
              <ui:ExcelWriteCell Cell="[UserConfig(&quot;AssetCell&quot;).ToString]" DisplayName="Write Cell - Prev year Asset" sap:VirtualizedContainerService.HintSize="560,51" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" Text="[UserConfig(&quot;AssetSheetName&quot;).ToString.Trim]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelWriteCell>
              <ui:ExcelWriteCell Cell="[UserConfig(&quot;LiabCell1&quot;).ToString]" DisplayName="Write Cell - Current Year Liablity" sap:VirtualizedContainerService.HintSize="560,51" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" Text="[UserConfig(&quot;LiablitySheetName1&quot;).ToString.Trim]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelWriteCell>
              <ui:ExcelWriteCell Cell="[UserConfig(&quot;AssetCell1&quot;).ToString]" DisplayName="Write Cell - Current Year Asset" sap:VirtualizedContainerService.HintSize="560,51" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" Text="[UserConfig(&quot;AssetSheetName1&quot;).ToString.Trim]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelWriteCell>
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="560,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,778" sap2010:WorkflowViewState.IdRef="Sequence_15">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelWriteCell Cell="[UserConfig(&quot;AverageCell&quot;).ToString]" DisplayName="Average Write Cell" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" Text="[&quot;=+&quot;+UserConfig(&quot;AverageValue&quot;).ToString]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="[UserConfig(&quot;QuaterPercentageCell&quot;).ToString]" DisplayName="QuaterPercentageCell Write Cell" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" Text="[&quot;=+&quot;+UserConfig(&quot;QuaterPercentageValue&quot;).ToString]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="[UserConfig(&quot;AnnualizedAmountCell&quot;).ToString]" DisplayName="AnnualizedAmountCell Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" Text="[&quot;=&quot;+UserConfig(&quot;AnnualizedAmountValue&quot;).ToString]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="[UserConfig(&quot;AmortizationCell&quot;).ToString]" DisplayName="AmortizationValue Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" Text="[&quot;=+&quot;+UserConfig(&quot;AmortizationValue&quot;).ToString]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="[UserConfig(&quot;QuaterAmortizationCell&quot;).ToString]" DisplayName="QuaterAmortizationValue Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" Text="[&quot;=+&quot;+UserConfig(&quot;QuaterAmortizationValue&quot;).ToString]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <ui:ExcelWriteCell Cell="[UserConfig(&quot;NewQuaterAmortizationCell&quot;).ToString]" DisplayName="New QuaterAmortizationValue Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" Text="[&quot;=+&quot;+UserConfig(&quot;NewQuaterAmortizationValue&quot;).ToString]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                  </Sequence>
                </ui:CommentOut.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CommentOut>
              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_5Prev]" DisplayName="5 Prev year Write Range" sap:VirtualizedContainerService.HintSize="560,51" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" StartingCell="[UserConfig(&quot;500010_Prev_Year&quot;).ToString]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelWriteRange>
              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_5Curr]" DisplayName="5 Curr year Write Range" sap:VirtualizedContainerService.HintSize="560,51" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" StartingCell="[UserConfig(&quot;500010_Curr_Year&quot;).ToString]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelWriteRange>
              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_4Prev]" DisplayName="4 Prev year Write Range" sap:VirtualizedContainerService.HintSize="560,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" StartingCell="[UserConfig(&quot;400020_400040_Prev_Year&quot;).ToString]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelWriteRange>
              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_4Curr]" DisplayName="4 Curr year Write Range" sap:VirtualizedContainerService.HintSize="560,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" StartingCell="[UserConfig(&quot;400020_400040_Curr_Year&quot;).ToString]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelWriteRange>
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_Addn]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="560,51" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,379" sap2010:WorkflowViewState.IdRef="Sequence_18">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:FilterDataTable DataTable="[dt_Addn]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="334,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dt_Temp]" SelectColumnsMode="Remove">
                        <ui:FilterDataTable.Filters>
                          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                              <ui:FilterOperationArgument.Column>
                                <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                              </ui:FilterOperationArgument.Column>
                              <ui:FilterOperationArgument.Operand>
                                <InArgument x:TypeArguments="x:Int32">[cint(CurrentRow.item(0).ToString)]</InArgument>
                              </ui:FilterOperationArgument.Operand>
                            </ui:FilterOperationArgument>
                          </scg:List>
                        </ui:FilterDataTable.Filters>
                        <ui:FilterDataTable.SelectColumns>
                          <scg:List x:TypeArguments="InArgument" Capacity="4">
                            <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                            <InArgument x:TypeArguments="x:Int32">[9]</InArgument>
                          </scg:List>
                        </ui:FilterDataTable.SelectColumns>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:FilterDataTable>
                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_Temp]" DisplayName="Update Add Data Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_5" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" StartingCell="[CurrentRow.Item(9).ToString]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ExcelWriteRange>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
              <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dt_FormatTable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="560,87" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="Quater" WorkbookPath="[path.Combine(In_Config(&quot;Local&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName.ToString),In_Config(&quot;UserinputFileName&quot;).ToString)]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ReadRange>
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_FormatTable]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="560,1253" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="AddnClear" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1134" sap2010:WorkflowViewState.IdRef="Sequence_20">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[AddnClear.Item(3).ToString=QuaterValueSel.Trim]" DisplayName="Clear formula check If" sap:VirtualizedContainerService.HintSize="484,400" sap2010:WorkflowViewState.IdRef="If_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="Ready to clear" sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_23">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[ClearanceCheck]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:Continue sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Continue_1" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_22">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <If Condition="[ClearanceCheck]" DisplayName="Ready to clear range valuesIf" sap:VirtualizedContainerService.HintSize="484,602" sap2010:WorkflowViewState.IdRef="If_5">
                        <If.Then>
                          <Sequence DisplayName="Clear unwanted Contents" sap:VirtualizedContainerService.HintSize="242,416" sap2010:WorkflowViewState.IdRef="Sequence_24">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_1" Range="[AddnClear.Item(4).ToString]" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" ShiftCells="False" ShiftOption="ShiftUp">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelDeleteRange>
                            <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_2" Range="[AddnClear.Item(5).ToString]" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" ShiftCells="False" ShiftOption="ShiftUp">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelDeleteRange>
                            <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_3" Range="[AddnClear.Item(6).ToString]" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" ShiftCells="False" ShiftOption="ShiftUp">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelDeleteRange>
                            <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_4" Range="[AddnClear.Item(7).ToString]" SheetName="[UserConfig(&quot;TemplateSheetName&quot;).ToString]" ShiftCells="False" ShiftOption="ShiftUp">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelDeleteRange>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_25">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
              </ui:ForEachRow>
              <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="560,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_2" />
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="560,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_2" Workbook="[TWb]" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
    </Sequence>
    <Sequence DisplayName="Move Files to Archive and Box Drive" sap:VirtualizedContainerService.HintSize="678,66" sap2010:WorkflowViewState.IdRef="Sequence_16">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[ArchivePath]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[path.Combine(in_Config("ArchivePath").ToString.Replace("&lt;username&gt;",Environment.UserName),now.ToString("ddMMyyHHmmss"))]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="434,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[ArchivePath]" />
      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[path.Combine(UserConfig(&quot;FilePath&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),&quot;ForecastReport_&quot;+now.ToString(&quot;ddMMyyHHmmss&quot;)+&quot;.xlsx&quot;)]" DisplayName="Template to Box Drive - Copy File" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="CopyFile_3" Overwrite="True" Path="[path.Combine(in_Config(&quot;Local&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;TemplateName&quot;).ToString)]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CopyFile>
      <Delay Duration="00:00:20" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
      <ui:MoveFile ContinueOnError="{x:Null}" Destination="[ArchivePath]" DisplayName="Template File to Archive - Move File" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="MoveFile_3" Overwrite="True" Path="[path.Combine(in_Config(&quot;Local&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;TemplateName&quot;).ToString)]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MoveFile>
      <ui:MoveFile ContinueOnError="{x:Null}" Destination="[ArchivePath]" DisplayName="Forecast File to Archive - Move File" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="MoveFile_12" Overwrite="True" Path="[path.Combine(in_Config(&quot;Local&quot;).ToString.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),UserConfig(&quot;ForecastFileName&quot;).ToString)]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MoveFile>
      <ui:MoveFile ContinueOnError="{x:Null}" Destination="[ArchivePath]" DisplayName="Report_500010_Name - Move File" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="MoveFile_4" Overwrite="True" Path="[path.Combine(in_Config(&quot;Local&quot;).ToString,in_Config(&quot;Report_500010_Name&quot;).ToString + &quot;_&quot; + UserConfig(&quot;PreviousYear&quot;).ToString + &quot;.xlsx&quot;)]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MoveFile>
      <ui:MoveFile ContinueOnError="{x:Null}" Destination="[ArchivePath]" DisplayName="Report_400020_400040_Name - Move File" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="MoveFile_5" Overwrite="True" Path="[path.Combine(in_Config(&quot;Local&quot;).ToString,in_Config(&quot;Report_400020_400040_Name&quot;).ToString + &quot;_&quot; + UserConfig(&quot;PreviousYear&quot;).ToString + &quot;.xlsx&quot;)]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MoveFile>
      <ui:MoveFile ContinueOnError="{x:Null}" Destination="[ArchivePath]" DisplayName="Report_500010_Name - Move File" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="MoveFile_6" Overwrite="True" Path="[path.Combine(in_Config(&quot;Local&quot;).ToString,in_Config(&quot;Report_500010_Name&quot;).ToString + &quot;_&quot; + UserConfig(&quot;CurrentYear&quot;).ToString + &quot;.xlsx&quot;)]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MoveFile>
      <ui:MoveFile ContinueOnError="{x:Null}" Destination="[ArchivePath]" DisplayName="Report_400020_400040_Name - Move File" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="MoveFile_7" Overwrite="True" Path="[path.Combine(in_Config(&quot;Local&quot;).ToString,in_Config(&quot;Report_400020_400040_Name&quot;).ToString + &quot;_&quot; + UserConfig(&quot;CurrentYear&quot;).ToString + &quot;.xlsx&quot;)]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MoveFile>
      <ui:MoveFile ContinueOnError="{x:Null}" Destination="[ArchivePath]" DisplayName="Report_500010_Name - Move File" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="MoveFile_8" Overwrite="True" Path="[path.Combine(in_Config(&quot;Local&quot;).ToString,in_Config(&quot;Report_400020_400040_Name&quot;).ToString + &quot;_&quot; + UserConfig(&quot;CurrentYear&quot;).ToString + &quot;.jpg&quot;)]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MoveFile>
      <ui:MoveFile ContinueOnError="{x:Null}" Destination="[ArchivePath]" DisplayName="Report_400020_400040_Name - Move File" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="MoveFile_9" Overwrite="True" Path="[path.Combine(in_Config(&quot;Local&quot;).ToString,in_Config(&quot;Report_500010_Name&quot;).ToString + &quot;_&quot; +UserConfig(&quot;CurrentYear&quot;).ToString + &quot;.jpg&quot;)]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MoveFile>
      <ui:MoveFile ContinueOnError="{x:Null}" Destination="[ArchivePath]" DisplayName="Report_500010_Name - Move File" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="MoveFile_10" Overwrite="True" Path="[path.Combine(in_Config(&quot;Local&quot;).ToString,in_Config(&quot;Report_400020_400040_Name&quot;).ToString + &quot;_&quot; + UserConfig(&quot;PreviousYear&quot;).ToString + &quot;.jpg&quot;)]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MoveFile>
      <ui:MoveFile ContinueOnError="{x:Null}" Destination="[ArchivePath]" DisplayName="Report_400020_400040_Name - Move File" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="MoveFile_11" Overwrite="True" Path="[path.Combine(in_Config(&quot;Local&quot;).ToString,in_Config(&quot;Report_500010_Name&quot;).ToString + &quot;_&quot; + UserConfig(&quot;PreviousYear&quot;).ToString + &quot;.jpg&quot;)]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MoveFile>
    </Sequence>
    <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[In_Config(&quot;OutlookProfile&quot;).ToString]" Body="[In_Config(&quot;logF_BusinessProcessName&quot;).ToString + &quot; : Run Completed&quot;]" Cc="[In_Config(&quot;SuccessEmailCC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="476,51" sap2010:WorkflowViewState.IdRef="SendOutlookMail_3" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[In_Config(&quot;logF_BusinessProcessName&quot;).ToString + &quot; : Run Completed&quot;]" To="[In_Config(&quot;SuccessEmailTo&quot;).ToString]">
      <ui:SendOutlookMail.Files>
        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
      </ui:SendOutlookMail.Files>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:SendOutlookMail>
  </Sequence>
</Activity>